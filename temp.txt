// 
	// Faire que quand on la classe est construite, commencer le calcul avec la prise de tout le texte et application de la m�thode TF-IDF
	// Faire une fonction qui r�cup�re toutes les pages dans la BD et retourne : Le nombre de pages totale du meme site et le nombre totale de pages
	// Avec un meme mot.
	//
	// Make a control function wich will get a database table instranciation, get all the pages of the same website
	// make structs for each one of them
	// Apply TF-IDF on them.
	// Store everything in the final DB for the API.
	//
	//
	//
	// TF-IDF = TF x IDF (log10)
	// TF = Term Frequency = Nb D'occurences / Nb de mots de la page
	// (TO THINK NOW)	IDF = Nb de pages / Nb de pages avec le mot

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	TODO : 

	Nouvelle id�e pour la processing unit : 

		

		Grace au deux fonction déja présente dans algorithms.cpp, faire une fonction qui va d'abord compter le nombre de mot totaux dans le string
		Grace a word_counter() et ensuite dans le meme string lancer word_occurences et itérer dans la hashmap retournée, pour chaque mot il faudra juste faire 
		imaginons que i est l'itérateur, i.second * nombre-de-mots-totaux = score et tout enregistrer dans la table sql rev_index

		Pour faire ça Faire des fonctions pour pouvoir facilement insert dans la table rev_index !!!!

		
		Une fois terminée Faire le loop et rendre le code plus propre.


		Completer le document avec des idées pour la propretée

//

// 
	 API : PYTHON, DJANGO

	 List of stuff to do : 
	 	- Setup a basic django project
	 	- Make the HTML and CSS code of the main presentation page, the searching page and the show results.
	 	- And make basic API For all the pages above.


	CRAWLER : TODO HOME


	NAVIGATEUR : BASICALLY HTML AND CSS AND JS COMPILER, SEARCH BAR ON TOP TO REQUEST CERTAIN WEBSITES, IF NOT VALID WEBSITE DO A BASIC SEARCH, CENTER SEARCH BAR TO MAKE A BASIC SEARCH AND JUST MAKE THE HTML CODE OF THE BROWSER STORED BY DEFAULT SO NO WIFI TO OPEN IT BUT WIFI REQUIRED TO DO RESEARCHES.




